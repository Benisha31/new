 d6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10;import java.lang.Thread.State;

public class UserCode 
{
	public Thread changeThreadNamePriority(Thread tName)
	{String s=tName.getName();
	String s1=s.substring(0,1)+s.substring(s.length()-1);
	tName.setName(s1);
		tName.setPriority(10);
		/*
		 * WAP to accept a Thread as Argument ,and change its name to first letter and last letter of the name.
		 * And change its priority to MAX and return.
		 * Eg: IF thread Name is "HELLO" change it to "HO" and change the priority to MAX
		 * */
	
		return tName;
	}
}



11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
import java.lang.Thread.State;

public class UserCode 
{
	public String findThreadGroup(Thread tName)
	{
		String groupName=null;
		ThreadGroup t=tName.getThreadGroup();
		groupName=t.toString();
		/*
		 * WAP to accept a Thread as argument and return in which ThreadGroup it belong to.
		 * */
	
		return groupName;
	}
}

Q15;;;;;
import java.util.ArrayList;
import java.util.List;

public class UserCode extends Thread
{
	public List<Integer> fillArray(int limit)
	{
		List<Integer> out=null;
		out=new ArrayList<Integer>();
		for(int i=1;i<=limit;i++)
		{
			out.add(i);
		}
		try {
			sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		/*
		 * WAP to accept a limit as argument and fill the ArrayList from 1 to that limit.
		 Rule : Add each element by one second gap. Use Thread.sleep() for the delay.
		*/
		
		return out;
	}
}
